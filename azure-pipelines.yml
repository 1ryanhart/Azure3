name: Azure Pipelines

trigger:
- master


variables:
  python.version: '3.7.6'
  vmImageName: 'ubuntu-latest'

stages:
- stage: TerraformIAC
  displayName: TerraformIAC
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
    - job: TerraformIACJob
      pool:
        name: myAgentPool
        vmImage: $(vmImageName)
      displayName: TerraformIAC job
      steps:
      - checkout: self
        clean: true

      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        displayName: Install Terraform latest
        inputs:
          terraformVersion: "0.14.7"
        
      - task: TerraformTaskV3@3
        displayName: 'Terraform : azurerm'
        inputs:
          backendServiceArm: 74640713-f1cf-4110-97ac-8272f2147c6d
          backendAzureRmResourceGroupName: Azuredevops
          backendAzureRmStorageAccountName: mystorage198570
          backendAzureRmContainerName: blob198570
          backendAzureRmKey: tf/terraform.tfstate
      - task: TerraformTaskV3@3
        displayName: 'Terraform : azurerm'
        inputs:
          command: apply
          environmentServiceNameAzureRM: 74640713-f1cf-4110-97ac-8272f2147c6d

- stage: Build
  jobs:
  - job: Build
    pool:
      name: myAgentPool
      vmImage: $(vmImageName)
    steps:
    # Needed for Terraform VM deployment
    # - task: InstallSSHKey@0
    #   inputs:
    #     knownHostsEntry: 'KNOWN_HOSTS_STRING'
    #     sshPublicKey: 'PUBLIC_KEY'
    #     sshKeySecureFile: 'id_rsa'
    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: 'path/to/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi
- stage:
  jobs:
  - deployment: FakeRestAPI
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: ''
              appName: ''
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  # - deployment: VMDeploy
  #   displayName: NAME
  #   environment:
  #     name:  ENVIRONMENT NAME
  #     resourceType: VirtualMachine
  #     tags: TAG NAME
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #         - task: Bash@3
  #           inputs:
  #             targetType: 'inline'
  #             script: |
  #               #! /bin/bash
                
  #               sudo apt-get upgrade -y
  #               sudo apt-get install python3-pip -y
  #               sudo apt-get install unzip -y
  #               sudo apt-get install -y chromium-browser
  #               pip3 install selenium
  #               export PATH=$PATH:some/path


